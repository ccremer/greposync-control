{{- template "comment" . -}}
name: Release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
{{ if eq .Values.releaseStrategy "goreleaser" }}
      - name: Determine Go version from go.mod
        run: echo "GO_VERSION=$(grep "go 1." go.mod | cut -d " " -f 2)" >> $GITHUB_ENV

      - uses: actions/setup-go@v3
        with:
          go-version: {{`${{ env.GO_VERSION }}`}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: {{`${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}`}}
          restore-keys: |
            {{`${{ runner.os }}-go-`}}

      - name: Import GPG signing key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: {{`${{ secrets.SIGNING_KEY }}`}}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: {{`${{ github.repository_owner }}`}}
          password: {{`${{ secrets.GITHUB_TOKEN }}`}}

{{- if .Values.imageRegistries.quayio.enabled }}

      - name: Login to quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: {{`${{ secrets.QUAY_IO_USER }}`}}
          password: {{`${{ secrets.QUAY_IO_PASSWORD }}`}}
{{- end }}
{{ end }}
      - name: Build changelog from PRs with labels
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ".github/changelog-configuration.json"
          # PreReleases still get a changelog, but the next full release gets a diff since the last full release,
          # combining possible changelogs of all previous PreReleases in between.
          # PreReleases show a partial changelog since last PreRelease.
          ignorePreReleases: {{`"${{ !contains(github.ref, '-rc') }}"`}}
          {{- if eq .Values.releaseStrategy "goreleaser" }}
          outputFile: .github/release-notes.md
          {{- end }}
        env:
          GITHUB_TOKEN: {{`${{ secrets.GITHUB_TOKEN }}`}}
{{ if eq .Values.releaseStrategy "goreleaser" }}
      - name: Publish releases
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --release-notes .github/release-notes.md
        env:
          GITHUB_TOKEN: {{`${{ secrets.GITHUB_TOKEN }}`}}
          IMAGE_REPOSITORY: {{`${{ github.repository }}`}}
{{- end }}
{{- if eq .Values.releaseStrategy "plain" }}
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          body: {{`${{steps.build_changelog.outputs.changelog}}`}}
          prerelease: {{`"${{ contains(github.ref, '-rc') }}"`}}
          # Ensure target branch for release is "master"
          commit: master
          token: {{`${{ secrets.GITHUB_TOKEN }}`}}
{{- end }}
